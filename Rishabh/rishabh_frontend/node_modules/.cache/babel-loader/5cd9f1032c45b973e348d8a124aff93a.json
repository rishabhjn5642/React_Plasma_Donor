{"ast":null,"code":"var _jsxFileName = \"/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/screen/homeScreen/component/Contact.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { Redirect } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport AccountCircle from '@material-ui/icons/AccountCircle'; // import { Redirect } from \"react-router-dom\";\n// import { useScrollTrigger } from \"@material-ui/core\";\n// import './Signup.css';\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state); // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n      const url = \"http://localhost:8080/feedback\";\n      fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify({\n          name: this.state.name,\n          email: this.state.email,\n          feedback: this.state.feedback\n        })\n      }).then(response => response.text()).then(response => {\n        console.log(response);\n\n        if (this.state.name === \"\" || this.state.email === \"\" || this.state.feedback === \"\") {\n          alert(\"fill the blanks\");\n        } else if (response === \"send\") {\n          console.log(this.state.name);\n          this.setState({\n            loggedIn: true\n          });\n        }\n      }).catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\"));\n    };\n\n    this.state = {\n      name: null,\n      email: null,\n      feedback: null,\n      loggedIn: false\n    };\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Thankyou\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const form = {\n      width: \"100%\",\n      marginTop: \"24px\"\n    };\n    const submit = {\n      margin: \"24px 0px 16px\"\n    };\n    const x = {\n      margin: \"12px\"\n    };\n    const {\n      name,\n      email,\n      feedback\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"40px\",\n        paddingTop: \"50px\",\n        paddingLeft: \"60px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Plasma Contact Us\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"lightgrey\",\n        width: \"600px\",\n        border: \"1px solid green\",\n        padding: \"50px\",\n        margin: \"20px\",\n        borderRadius: \"120px 20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      style: form,\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: x,\n      id: \"input-with-icon-textfield\",\n      label: \"Name\",\n      fullWidth: \"true\",\n      value: name,\n      onChange: this.changeHandler,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(AccountCircle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: x,\n      id: \"input-with-icon-textfield\",\n      label: \"Email\",\n      fullWidth: \"true\",\n      onChange: this.changeHandler,\n      value: email,\n      InputProps: {\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"start\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(EmailIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-textarea\",\n      label: \"Contact Us\",\n      placeholder: \"Min 50 words\",\n      onChange: this.changeHandler,\n      multiline: true,\n      fullWidth: \"true\",\n      value: feedback,\n      rows: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"white\" //   disabled={!validateForm()}\n      ,\n      style: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Box, {\n      mt: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/screen/homeScreen/component/Contact.js"],"names":["React","Component","Button","CssBaseline","TextField","Grid","Box","Redirect","Container","InputAdornment","EmailIcon","ContactSupportIcon","AccountCircle","SignUp","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","email","feedback","then","response","text","alert","loggedIn","catch","render","form","width","marginTop","submit","margin","x","textAlign","fontSize","paddingTop","paddingLeft","color","backgroundColor","border","padding","borderRadius","startAdornment"],"mappings":"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","sourcesContent":["import React, {Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { Redirect } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\n\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport EmailIcon from '@material-ui/icons/Email';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\n\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n// import { Redirect } from \"react-router-dom\";\n// import { useScrollTrigger } from \"@material-ui/core\";\n// import './Signup.css';\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:null,\n      email:null,\n      feedback:null,\n      loggedIn:false\n    };\n  }\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  submitHandler = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"http://localhost:8080/feedback\";\n     fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        \n            name:this.state.name,\n            email: this.state.email,\n            feedback: this.state.feedback\n          \n      }),\n    })\n      .then((response) => response.text())\n      .then((response) =>{\n        console.log(response)\n\n        if (this.state.name===\"\" || this.state.email===\"\" || this.state.feedback===\"\")\n        {\n\n            alert(\"fill the blanks\")\n        }\n\n\n        else if(response===\"send\")\n        {\n          console.log(this.state.name)\n          this.setState({\n            loggedIn:true\n          })\n        }\n        \n    \n      })\n      .catch(() =>\n        console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n      );\n  };\n\n  render() {\n    if (this.state.loggedIn) {\n      return <Redirect to=\"/Thankyou\" />;\n    }\n    const form = {\n      width: \"100%\",\n      marginTop: \"24px\",\n    };\n    const submit = {\n      margin: \"24px 0px 16px\",\n    };\n    const x={\n        margin:\"12px\"\n    }\n    const { name, email, feedback } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div>\n        <div style={{ textAlign: \"center\",fontSize:\"40px\",paddingTop:\"50px\",paddingLeft:\"60px\",color:\"red\"}}>\n           Plasma Contact Us\n        </div>\n\n        <div style={{\n  backgroundColor: \"lightgrey\",\n  width: \"600px\",\n  border: \"1px solid green\",\n  padding: \"50px\",\n  margin: \"20px\",\n   borderRadius: \"120px 20px\",\n}}>\n          <form style={form} onSubmit={this.submitHandler}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n              <TextField\n        className={x}\n        id=\"input-with-icon-textfield\"\n        label=\"Name\"\n        fullWidth=\"true\"\n        value={name}\n        onChange={this.changeHandler}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n              </Grid>\n              <Grid item xs={12}>\n              <TextField\n        className={x}\n        id=\"input-with-icon-textfield\"\n        label=\"Email\"\n        fullWidth=\"true\"\n        onChange={this.changeHandler}\n        value={email}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <EmailIcon/>\n            </InputAdornment>\n          ),\n        }}\n      />\n              </Grid>\n              <Grid item xs={12}>\n              <TextField\n          id=\"standard-textarea\"\n          label=\"Contact Us\"\n          placeholder=\"Min 50 words\"\n          onChange={this.changeHandler}\n          multiline\n          fullWidth=\"true\"\n          value={feedback}\n          rows={8}\n          \n          \n        />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"white\"\n              //   disabled={!validateForm()}\n              style={submit}\n            >\n              Submit\n            </Button>\n            \n          </form>\n          </div>\n        </div>\n        <Box mt={5}></Box>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}