{"ast":null,"code":"var _jsxFileName = \"/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/shared/cardDetails/containor/CardPage.js\";\nimport React from \"react\";\nimport DistancSlider from \"../../filters/DistanceSlider\";\nimport PriceSlider from \"../../filters/PriceSlider\";\nimport faker from \"faker\";\nimport Card from \"../component/Cards\";\nimport BloodGroup from \"../../filters/BloodGroupDropDown\";\nimport CitiesDropDown from \"../../filters/CitiesDropdown\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass CardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.responsevalue = response => {\n      console.log(response);\n      let a = response.map(data => {\n        return {\n          src: faker.image.avatar(),\n          price: data.bidPrice\n        };\n      });\n      this.setState({\n        data: a\n      });\n    };\n\n    this.checkvalue1 = v => {\n      this.setState({\n        distance: v\n      });\n    };\n\n    this.checkvalue2 = v => {\n      this.setState({\n        price: v\n      });\n      console.log(v);\n    };\n\n    this.state = {\n      actual: null,\n      price: null,\n      data: [],\n      latitude: null,\n      longitude: null,\n      distance: null\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    });\n    console.log(\"rishabh\");\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"http://localhost:8080/covid/getAllCovidUsers\";\n    const response = fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(response => this.responsevalue(response)).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser\"));\n    const url1 = \"http://localhost:8080/filters/distance\";\n    let q = {\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      distance: 10\n    };\n    const response1 = fetch(url1, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(q)\n    }).then(response => response.json()).then(response => console.log(response)).catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"50px\",\n        borderRadius: \"25px\",\n        backgroundColor: \"#F1F1F1\",\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DistancSlider, {\n      checkvalue: this.checkvalue1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PriceSlider, {\n      checkvalue: this.checkvalue2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BloodGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })))), this.state.data.map((obj, key) => {\n      return this.state.actual == null && this.state.price == null ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        Price: this.state.data[key].price,\n        ratings: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }) : this.state.actual >= obj.distance && this.state.price == null ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        distance: obj.distance,\n        ratings: obj.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }) : this.state.actual >= obj.distance && obj.price <= this.state.price ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        distance: obj.distance,\n        ratings: obj.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }) : this.state.price >= obj.price && this.state.actual == null ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        distance: obj.distance,\n        ratings: obj.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }) : null;\n    }));\n  }\n\n}\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/shared/cardDetails/containor/CardPage.js"],"names":["React","DistancSlider","PriceSlider","faker","Card","BloodGroup","CitiesDropDown","Grid","CardPage","Component","constructor","props","responsevalue","response","console","log","a","map","data","src","image","avatar","price","bidPrice","setState","checkvalue1","v","distance","checkvalue2","state","actual","latitude","longitude","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","coords","proxyurl","url","fetch","method","mode","cache","credentials","then","json","catch","url1","q","response1","headers","redirect","referrerPolicy","body","JSON","stringify","render","padding","borderRadius","backgroundColor","marginLeft","marginRight","marginTop","obj","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DistancSlider from \"../../filters/DistanceSlider\";\nimport PriceSlider from \"../../filters/PriceSlider\";\nimport faker from \"faker\";\nimport Card from \"../component/Cards\";\nimport BloodGroup from \"../../filters/BloodGroupDropDown\";\nimport CitiesDropDown from \"../../filters/CitiesDropdown\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass CardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actual: null,\n      price: null,\n      data:[\n\n      ],\n        latitude:null,\n        longitude:null,\n        distance:null\n      }\n    };\n\n\n  componentDidMount() {\n\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      }\n    );\n\n\n    console.log(\"rishabh\")\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"http://localhost:8080/covid/getAllCovidUsers\";\n    const response = fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      \n    })\n      .then((response) => response.json())\n      .then((response) => this.responsevalue(response))\n      .catch(() =>\n        console.log(\"Can’t access \" + url + \" response. Blocked by browser\")\n      );\n\n      const url1 = \"http://localhost:8080/filters/distance\";\n\n      let q = {\n        latitude:this.state.latitude,\n        longitude:this.state.longitude,\n        distance : 10\n\n      }\n\n      const response1 = fetch(url1, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify(q),\n      })\n        .then((response) => response.json())\n        .then((response) => console.log(response))\n        .catch(() =>\n          console.log(\"Can’t access \" + url + \" response. Blocked by browser\")\n        );\n     \n  };\n\n  responsevalue=(response)=>{\n  \n    console.log(response)\n  let a=response.map((data) => {\n    return { src:faker.image.avatar(),price:data.bidPrice}})\n    this.setState({\n      data:a\n    }\n  )\n}\n\n  checkvalue1 = (v) => {\n    this.setState({\n      distance:v,\n    });\n  };\n  checkvalue2 = (v) => {\n    this.setState({\n      price: v,\n    });\n    console.log(v);\n  };\n\n\n  render() \n  {\n    return (\n      <div>\n        <div\n          style={{\n            padding: \"50px\",\n            borderRadius: \"25px\",\n            backgroundColor: \"#F1F1F1\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\",\n            marginTop: \"20px\",\n          }}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={5}>\n              <DistancSlider checkvalue={this.checkvalue1} />\n            </Grid>\n            <Grid item xs={5}>\n              <PriceSlider checkvalue={this.checkvalue2} />\n            </Grid>\n           \n            <Grid item xs={4}>\n              <BloodGroup />\n            </Grid>\n          </Grid>\n        </div>\n        {this.state.data.map((obj, key) => {\n          return this.state.actual == null && this.state.price == null ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              Price={this.state.data[key].price}\n              ratings=\"4\"\n            />\n          ) : this.state.actual >= obj.distance && this.state.price == null ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              distance={obj.distance}\n              ratings={obj.price}\n            />\n          ) : this.state.actual >= obj.distance && obj.price <= this.state.price ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              distance={obj.distance}\n              ratings={obj.price}\n            />\n          ) : this.state.price >= obj.price && this.state.actual == null ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              distance={obj.distance}\n              ratings={obj.price}\n            />  \n          ):null\n        }\n          \n        \n        )\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default CardPage;\n"]},"metadata":{},"sourceType":"module"}