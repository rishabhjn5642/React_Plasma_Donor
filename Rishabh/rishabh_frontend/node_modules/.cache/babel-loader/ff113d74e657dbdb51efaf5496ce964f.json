{"ast":null,"code":"var _jsxFileName = \"/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/screen/registeration/component/ButtonForRecovered.js\";\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nexport default class Recovered extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      const url = \"http://localhost:8080/covid/add\";\n      fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify({\n          name: null,\n          email: null,\n          password: null,\n          bidPrice: null,\n          bloodGroup: null,\n          cityName: null,\n          longitude: props.longitude,\n          latitude: props.latitude,\n          phonenumber: null\n        })\n      }).then(response => response.text()).then(response => {\n        console.log(response);\n\n        if (this.state.password === \"\" || this.state.phonenumber === \"\") {\n          alert(\"fill the blanks\");\n        } else if (response) {\n          console.log(this.state.password);\n          this.setState({\n            loggedIn: true\n          });\n        }\n      }).catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\"));\n    };\n\n    this.state = {\n      name: null,\n      email: null,\n      password: null,\n      bidPrice: null,\n      bloodGroup: null,\n      cityName: null,\n      longitude: _props.longitude,\n      latitude: _props.latitude,\n      phonenumber: null,\n      loggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n    }, error => {\n      this.setState({\n        err: error.message\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/otp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }\n      });\n    }\n\n    const form = {\n      width: \"100%\",\n      marginTop: \"24px\"\n    };\n    const {\n      name,\n      email,\n      password,\n      bidPrice,\n      bloodGroup,\n      cityName,\n      phonenumber\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      style: form,\n      noValidate: true,\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"name\",\n      name: \"name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"name\",\n      label: \"Name\",\n      autoFocus: true,\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"bidPrice\",\n      label: \"Rs Bid price\",\n      name: \"bidPrice\",\n      autoComplete: \"bidPrice\",\n      value: bidPrice,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      value: email,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: password,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"cityName\",\n      label: \"cityName\",\n      type: \"cityName\",\n      id: \"cityName\",\n      autoComplete: \"cityName\",\n      value: cityName,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"bloodGroup\",\n      label: \"bloodGroup\",\n      type: \"bloodGroup\",\n      id: \"bloodGroup\",\n      autoComplete: \"bloodGroup\",\n      value: bloodGroup,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"phonenumber\",\n      label: \"phonenumber\",\n      type: \"phonenumber\",\n      id: \"phonenumber\",\n      autoComplete: \"phonenumber\",\n      value: phonenumber,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"white\" //   disabled={!validateForm()}\n      // style={submit}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, \"Went to the OTP\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/screen/registeration/component/ButtonForRecovered.js"],"names":["React","Component","TextField","Grid","Button","Link","Recovered","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","email","password","bidPrice","bloodGroup","cityName","longitude","latitude","phonenumber","then","response","text","alert","loggedIn","catch","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","coords","error","err","message","render","form","width","marginTop"],"mappings":"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","sourcesContent":["import React, {Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\n\nexport default class Recovered extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n      email: null,\n      password: null,\n\n      bidPrice: null,\n\n      bloodGroup: null,\n      cityName: null,\n      longitude: props.longitude,\n      latitude: props.latitude,\n      phonenumber: null,\n\n      loggedIn:false\n    };\n  }\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      },\n      (error) => {\n        this.setState({\n          err: error.message,\n        });\n      }\n    );\n  }\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    const url = \"http://localhost:8080/covid/add\";\n    fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({\n        name: null,\n        email: null,\n        password: null,\n  \n        bidPrice: null,\n  \n        bloodGroup: null,\n        cityName: null,\n        longitude: props.longitude,\n        latitude: props.latitude,\n        phonenumber: null,\n      }),\n    })\n      .then((response) => response.text())\n      .then((response) => {\n        console.log(response)\n\n        if (this.state.password===\"\" || this.state.phonenumber===\"\")\n        {\n\n            alert(\"fill the blanks\")\n        }\n\n\n        else if(response)\n        {\n          console.log(this.state.password)\n          this.setState({\n            loggedIn:true\n          })\n        }\n        \n    \n      })\n      .catch(() =>\n        console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n      );\n  };\n\n  render() { if (this.state.loggedIn) {\n    return <Redirect to=\"/otp\" />;\n  }\n   \n    const form = {\n      width: \"100%\",\n      marginTop: \"24px\",\n    };\n    const {\n      name,\n      email,\n      password,\n      bidPrice,\n      bloodGroup,\n      cityName,\n      phonenumber,\n    } = this.state;\n\n    return (\n      <form style={form} noValidate onSubmit={this.submitHandler}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} lg={6}>\n            <TextField\n              autoComplete=\"name\"\n              name=\"name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              autoFocus\n              value={name}\n              onChange={this.changeHandler}\n            />\n          </Grid>\n          <Grid item xs={12} lg={6}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"bidPrice\"\n              label=\"Rs Bid price\"\n              name=\"bidPrice\"\n              autoComplete=\"bidPrice\"\n              value={bidPrice}\n              onChange={this.changeHandler}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={email}\n              onChange={this.changeHandler}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={this.changeHandler}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} lg={6}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"cityName\"\n                label=\"cityName\"\n                type=\"cityName\"\n                id=\"cityName\"\n                autoComplete=\"cityName\"\n                value={cityName}\n                onChange={this.changeHandler}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} sm={6} lg={6}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"bloodGroup\"\n                label=\"bloodGroup\"\n                type=\"bloodGroup\"\n                id=\"bloodGroup\"\n                autoComplete=\"bloodGroup\"\n                value={bloodGroup}\n                onChange={this.changeHandler}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"phonenumber\"\n              label=\"phonenumber\"\n              type=\"phonenumber\"\n              id=\"phonenumber\"\n              autoComplete=\"phonenumber\"\n              value={phonenumber}\n              onChange={this.changeHandler}\n            />\n          </Grid>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"white\"\n            //   disabled={!validateForm()}\n            // style={submit}\n          >\n            Went to the OTP\n          </Button>\n          \n        </Grid>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}