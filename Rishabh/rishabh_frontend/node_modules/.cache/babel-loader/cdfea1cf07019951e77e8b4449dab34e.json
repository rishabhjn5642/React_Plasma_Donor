{"ast":null,"code":"var _jsxFileName = \"/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/shared/cardDetails/containor/CardPage.js\";\nimport React from \"react\";\nimport DistancSlider from \"../../filters/DistanceSlider\";\nimport PriceSlider from \"../../filters/PriceSlider\";\nimport faker from \"faker\";\nimport Card from \"../component/Cards\";\nimport BloodGroup from \"../../filters/BloodGroupDropDown\"; // import CitiesDropDown from \"../../filters/CitiesDropdown\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nclass CardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.responsevalue = response => {\n      console.log(response[0].bidPrice);\n      let a = response.map(data => {\n        return {\n          src: faker.image.avatar(),\n          price: data.bidPrice,\n          bloodGroup: data.bloodGroup,\n          name: data.name,\n          phonenumber: data.phonenumber\n        };\n      });\n      this.setState({\n        data: a\n      });\n    };\n\n    this.responsevalue1 = response => {\n      console.log(response);\n      let a = response.map(filterdata => {\n        return {\n          src: faker.image.avatar(),\n          price: filterdata.bidPrice,\n          bloodGroup: filterdata.bloodGroup,\n          name: filterdata.name,\n          phonenumber: filterdata.phonenumber\n        };\n      });\n      this.setState({\n        filterdata: a\n      });\n    };\n\n    this.checkvalue1 = v => {\n      console.log(v);\n      this.setState({\n        distance: v\n      });\n      console.log(this.state.distance);\n      const url1 = \"http://localhost:8080/filters/distance\";\n      var q = {\n        longitude: this.state.longitude,\n        latitude: this.state.latitude,\n        distance: this.state.distance\n      };\n      console.log(q);\n      const response = fetch(url1, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(q)\n      }).then(response => response.json()).then(response => this.responsevalue1(response)).catch(() => console.log(\" rishabh \" + url1 + \" response. Blocked by browser\"));\n    };\n\n    this.checkvalue2 = v => {\n      this.setState({\n        price: v\n      });\n      console.log(v);\n    };\n\n    this.state = {\n      actual: null,\n      price: null,\n      data: [],\n      filterdata: [],\n      latitude: null,\n      longitude: null,\n      distance: null,\n      i: 0\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        i: 1\n      });\n    });\n    const url = \"http://localhost:8080/covid/getAllCovidUsers\";\n    fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(response => this.responsevalue(response)).catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, console.log(this.state.filterdata.price), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"50px\",\n        borderRadius: \"25px\",\n        backgroundColor: \"#F1F1F1\",\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DistancSlider, {\n      checkvalue: this.checkvalue1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PriceSlider, {\n      checkvalue: this.checkvalue2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    })))), this.state.distance === null ? this.state.data.map((obj, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        name: this.state.data[key].name,\n        BloodGroup: this.state.data[key].bloodGroup,\n        phonenumber: this.state.data[key].phonenumber,\n        price: this.state.data[key].price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }));\n    }) : this.state.price === null ? this.state.filterdata.map((obj, key) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.filterdata[key].src,\n        name: this.state.filterdata[key].name,\n        BloodGroup: this.state.filterdata[key].bloodGroup,\n        phonenumber: this.state.filterdata[key].phonenumber,\n        price: this.state.filterdata[key].price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      });\n    }) : this.state.filterdata.map((obj, key) => {\n      if (this.state.price >= this.state.filterdata[key].price) {\n        return /*#__PURE__*/React.createElement(Card, {\n          imgsrc: this.state.data[key].src,\n          name: this.state.filterdata[key].name,\n          BloodGroup: this.state.filterdata[key].bloodGroup,\n          phonenumber: this.state.filterdata[key].phonenumber,\n          price: this.state.filterdata[key].price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }\n        });\n      }\n    }));\n  }\n\n}\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/shared/cardDetails/containor/CardPage.js"],"names":["React","DistancSlider","PriceSlider","faker","Card","BloodGroup","Grid","CardPage","Component","constructor","props","responsevalue","response","console","log","bidPrice","a","map","data","src","image","avatar","price","bloodGroup","name","phonenumber","setState","responsevalue1","filterdata","checkvalue1","v","distance","state","url1","q","longitude","latitude","fetch","method","headers","body","JSON","stringify","then","json","catch","checkvalue2","actual","i","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","coords","url","mode","cache","credentials","render","padding","borderRadius","backgroundColor","marginLeft","marginRight","marginTop","obj","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DistancSlider from \"../../filters/DistanceSlider\";\nimport PriceSlider from \"../../filters/PriceSlider\";\nimport faker from \"faker\";\nimport Card from \"../component/Cards\";\nimport BloodGroup from \"../../filters/BloodGroupDropDown\";\n// import CitiesDropDown from \"../../filters/CitiesDropdown\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass CardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      actual: null,\n      price: null,\n      data: [],\n      filterdata: [],\n      latitude: null,\n      longitude: null,\n      distance: null,\n      i: 0,\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition((position) => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        i: 1,\n      });\n    });\n\n    const url = \"http://localhost:8080/covid/getAllCovidUsers\";\n    fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n    })\n      .then((response) => response.json())\n      .then((response) => this.responsevalue(response))\n      .catch(() =>\n        console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n      );\n  }\n\n  responsevalue = (response) => {\n    console.log(response[0].bidPrice);\n    let a = response.map((data) => {\n      return {\n        src: faker.image.avatar(),\n        price: data.bidPrice,\n\n        bloodGroup: data.bloodGroup,\n        name: data.name,\n        phonenumber: data.phonenumber,\n      };\n    });\n\n    this.setState({\n      data: a,\n    });\n  };\n\n  responsevalue1 = (response) => {\n    console.log(response);\n    let a = response.map((filterdata) => {\n      return {\n        src: faker.image.avatar(),\n        price: filterdata.bidPrice,\n        bloodGroup: filterdata.bloodGroup,\n        name: filterdata.name,\n        phonenumber: filterdata.phonenumber,\n      };\n    });\n\n    this.setState({\n      filterdata: a,\n    });\n  };\n\n  checkvalue1 = (v) => {\n    console.log(v);\n    this.setState({\n      distance: v,\n    });\n\n    console.log(this.state.distance);\n\n    const url1 = \"http://localhost:8080/filters/distance\";\n    var q = {\n      longitude: this.state.longitude,\n      latitude: this.state.latitude,\n\n      distance: this.state.distance,\n    };\n\n    console.log(q);\n\n    const response = fetch(url1, {\n      method: \"POST\",\n\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify(q),\n    })\n      .then((response) => response.json())\n      .then((response) => this.responsevalue1(response))\n      .catch(() =>\n        console.log(\" rishabh \" + url1 + \" response. Blocked by browser\")\n      );\n  };\n\n  checkvalue2 = (v) => {\n    this.setState({\n      price: v,\n    });\n    console.log(v);\n  };\n\n  render() {\n    return (\n      <div>\n        {console.log(this.state.filterdata.price)}\n        <div\n          style={{\n            padding: \"50px\",\n            borderRadius: \"25px\",\n            backgroundColor: \"#F1F1F1\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\",\n            marginTop: \"20px\",\n          }}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={5} lg={6}>\n              <DistancSlider checkvalue={this.checkvalue1} />\n            </Grid>\n            <Grid item xs={5} lg={6}>\n              <PriceSlider checkvalue={this.checkvalue2} />\n            </Grid>\n          </Grid>\n        </div>\n        {this.state.distance === null\n          ? this.state.data.map((obj, key) => {\n              return (\n                <div>\n                  <Card\n                    imgsrc={this.state.data[key].src}\n                    name={this.state.data[key].name}\n                    BloodGroup={this.state.data[key].bloodGroup}\n                    phonenumber={this.state.data[key].phonenumber}\n                    price={this.state.data[key].price}\n                  />\n                </div>\n              );\n            })\n          : this.state.price === null\n          ? this.state.filterdata.map((obj, key) => {\n              return (\n                <Card\n                  imgsrc={this.state.filterdata[key].src}\n                  name={this.state.filterdata[key].name}\n                  BloodGroup={this.state.filterdata[key].bloodGroup}\n                  phonenumber={this.state.filterdata[key].phonenumber}\n                  price={this.state.filterdata[key].price}\n                />\n              );\n            })\n          : this.state.filterdata.map((obj, key) => {\n              if (this.state.price >= this.state.filterdata[key].price) {\n                return (\n                  <Card\n                    imgsrc={this.state.data[key].src}\n                    name={this.state.filterdata[key].name}\n                    BloodGroup={this.state.filterdata[key].bloodGroup}\n                    phonenumber={this.state.filterdata[key].phonenumber}\n                    price={this.state.filterdata[key].price}\n                  />\n                );\n              }\n            })}\n      </div>\n    );\n  }\n}\n\nexport default CardPage;\n"]},"metadata":{},"sourceType":"module"}