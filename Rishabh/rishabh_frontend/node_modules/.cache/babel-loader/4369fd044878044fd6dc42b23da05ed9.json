{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhjain/Downloads/Rishabh/rishabh_frontend/src/screen/registeration/component/ButtonForRecovered.js\";\nimport React, { useState, Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nexport default class Recovered extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      const url = \"http://localhost:8080/covid/add/covid\";\n      const response = fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body: JSON.stringify(this.state)\n      }).then(response => response.text()).then(response => console.log(response)).catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\"));\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      i: 0,\n      phonenumber: \"\"\n    };\n  }\n\n  render() {\n    const paper = {\n      marginTop: \"64px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    };\n    const form = {\n      width: \"100%\",\n      marginTop: \"24px\"\n    };\n    const submit = {\n      margin: \"24px 0px 16px\"\n    };\n    const {\n      name,\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"name\",\n      name: \"name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"name\",\n      label: \"Name\",\n      autoFocus: true,\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"bidprice\",\n      label: \"Rs Bid price\",\n      name: \"bidprice\",\n      autoComplete: \"bidprice\",\n      value: name,\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"name\",\n      name: \"phonenumber\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"phonenumber\",\n      label: \"PhoneNumber\",\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"blue\",\n      onClick: () => {\n        this.setState({\n          i: 1\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Send OTP\")), this.state.i === 1 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"OTP\",\n      name: \"email\",\n      autoComplete: \"email\",\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"Verify\"))) : null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      value: age,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"Ten\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Twenty\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"Thirty\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      style: {\n        backgroundColor: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \"Blood Group\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"B+\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"A\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"A-\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: name,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\" //   disabled={!validateForm()}\n      ,\n      style: submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"Signin\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"Already have an account? Sign in\"))));\n  }\n\n} // import React, { useState, Component } from \"react\";\n// import Avatar from \"@material-ui/core/Avatar\";\n// import Button from \"@material-ui/core/Button\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Link from \"@material-ui/core/Link\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n// import Container from \"@material-ui/core/Container\";\n// import { Redirect } from \"react-router-dom\";\n// import { useScrollTrigger } from \"@material-ui/core\";\n// // import './Signup.css';\n// export default class SignUp extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: \"\",\n//       email: \"\",\n//       password: \"\",\n//     };\n//   }\n//   changeHandler = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n//   submitHandler = (e) => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n//     const url = \"http://localhost:8080/covid/add/covid\";\n//     const response = fetch(url, {\n//       method: \"POST\",\n//       mode: \"cors\",\n//       cache: \"no-cache\",\n//       credentials: \"same-origin\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       redirect: \"follow\",\n//       referrerPolicy: \"no-referrer\",\n//       body: JSON.stringify(this.state),\n//     })\n//       .then((response) => response.text())\n//       .then((response) => console.log(response))\n//       .catch(() =>\n//         console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n//       );\n//   };\n//   render() {\n//     const paper = {\n//       marginTop: \"64px\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//     };\n//     const form = {\n//       width: \"100%\",\n//       marginTop: \"24px\",\n//     };\n//     const submit = {\n//       margin: \"24px 0px 16px\",\n//     };\n//     const { name, email, password } = this.state;\n//     return (\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <div>\n//           <form style={form} noValidate onSubmit={this.submitHandler}>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} lg={6}>\n//                 <TextField\n//                   autoComplete=\"name\"\n//                   name=\"name\"\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   id=\"name\"\n//                   label=\"Name\"\n//                   autoFocus\n//                   value={name}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} lg={6}>\n//                 <TextField\n//                   autoComplete=\"Bid price\"\n//                   name=\"Bidprice\"\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   id=\"bidprice\"\n//                   label=\"Rs Bid price\"\n//                   autoFocus\n//                   value={name}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email Address\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                   value={email}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"current-password\"\n//                   value={password}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               color=\"primary\"\n//               //   disabled={!validateForm()}\n//               style={submit}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justify=\"flex-end\">\n//               <Grid item>\n//                 <Link href=\"Signin\" variant=\"body2\">\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </form>\n//         </div>\n//         <Box mt={5}></Box>\n//       </Container>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/rishabhjain/Downloads/Rishabh/rishabh_frontend/src/screen/registeration/component/ButtonForRecovered.js"],"names":["React","useState","Component","TextField","Grid","Button","Dropdown","Link","makeStyles","Recovered","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","proxyurl","url","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","then","text","catch","email","password","i","phonenumber","render","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","paddingLeft","age","handleChange","backgroundColor"],"mappings":"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":["import React, { useState, Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Link from \"@material-ui/core/Link\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default class Recovered extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      i: 0,\n      phonenumber: \"\",\n    };\n  }\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  submitHandler = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"http://localhost:8080/covid/add/covid\";\n    const response = fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(this.state),\n    })\n      .then((response) => response.text())\n      .then((response) => console.log(response))\n      .catch(() =>\n        console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n      );\n  };\n\n  render() {\n    const paper = {\n      marginTop: \"64px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    };\n    const form = {\n      width: \"100%\",\n      marginTop: \"24px\",\n    };\n    const submit = {\n      margin: \"24px 0px 16px\",\n    };\n    const { name, email, password } = this.state;\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} lg={6}>\n          <TextField\n            autoComplete=\"name\"\n            name=\"name\"\n            variant=\"outlined\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            autoFocus\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            id=\"bidprice\"\n            label=\"Rs Bid price\"\n            name=\"bidprice\"\n            autoComplete=\"bidprice\"\n            value={name}\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={6}>\n          <TextField\n            autoComplete=\"name\"\n            name=\"phonenumber\"\n            variant=\"outlined\"\n            required\n            fullWidth\n            id=\"phonenumber\"\n            label=\"PhoneNumber\"\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6}>\n          <Button\n            variant=\"contained\"\n            color=\"blue\"\n            onClick={() => {\n              this.setState({\n                i: 1,\n              });\n            }}\n          >\n            Send OTP\n          </Button>\n        </Grid>\n\n        {this.state.i === 1 ? (\n          <Grid container spacing={2} style={{ paddingLeft: \"10px\" }}>\n            <Grid item xs={6} lg={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"OTP\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={name}\n                onChange={this.changeHandler}\n              />\n            </Grid>\n            <Grid item xs={6} lg={6}>\n              <Button variant=\"contained\" color=\"blue\">\n                Verify\n              </Button>\n            </Grid>\n          </Grid>\n        ) : null}\n\n        <Grid item xs={12} sm={6} lg={6}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={age}\n            onChange={handleChange}\n          >\n            <MenuItem value={10}>Ten</MenuItem>\n            <MenuItem value={20}>Twenty</MenuItem>\n            <MenuItem value={30}>Thirty</MenuItem>\n          </Select>\n        </Grid>\n\n        <Grid item xs={12} sm={6} lg={12}>\n          <Dropdown>\n            <Dropdown.Toggle\n              variant=\"success\"\n              id=\"dropdown-basic\"\n              style={{ backgroundColor: \"blue\" }}\n            >\n              Blood Group\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">B+</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">A</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">A-</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={name}\n            onChange={this.changeHandler}\n          />\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          //   disabled={!validateForm()}\n          style={submit}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link href=\"Signin\" variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\n// import React, { useState, Component } from \"react\";\n// import Avatar from \"@material-ui/core/Avatar\";\n// import Button from \"@material-ui/core/Button\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Link from \"@material-ui/core/Link\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\n\n// import Container from \"@material-ui/core/Container\";\n// import { Redirect } from \"react-router-dom\";\n// import { useScrollTrigger } from \"@material-ui/core\";\n// // import './Signup.css';\n\n// export default class SignUp extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: \"\",\n//       email: \"\",\n//       password: \"\",\n//     };\n//   }\n//   changeHandler = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   };\n//   submitHandler = (e) => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n//     const url = \"http://localhost:8080/covid/add/covid\";\n//     const response = fetch(url, {\n//       method: \"POST\",\n//       mode: \"cors\",\n//       cache: \"no-cache\",\n//       credentials: \"same-origin\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       redirect: \"follow\",\n//       referrerPolicy: \"no-referrer\",\n//       body: JSON.stringify(this.state),\n//     })\n//       .then((response) => response.text())\n//       .then((response) => console.log(response))\n//       .catch(() =>\n//         console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n//       );\n//   };\n\n//   render() {\n//     const paper = {\n//       marginTop: \"64px\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//     };\n//     const form = {\n//       width: \"100%\",\n//       marginTop: \"24px\",\n//     };\n//     const submit = {\n//       margin: \"24px 0px 16px\",\n//     };\n//     const { name, email, password } = this.state;\n//     return (\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <div>\n//           <form style={form} noValidate onSubmit={this.submitHandler}>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12} lg={6}>\n//                 <TextField\n\n//                   autoComplete=\"name\"\n//                   name=\"name\"\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   id=\"name\"\n//                   label=\"Name\"\n//                   autoFocus\n//                   value={name}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//               <Grid item xs={12} lg={6}>\n//                 <TextField\n\n//                   autoComplete=\"Bid price\"\n//                   name=\"Bidprice\"\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   id=\"bidprice\"\n//                   label=\"Rs Bid price\"\n//                   autoFocus\n//                   value={name}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Email Address\"\n//                   name=\"email\"\n//                   autoComplete=\"email\"\n//                   value={email}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   required\n//                   fullWidth\n//                   name=\"password\"\n//                   label=\"Password\"\n//                   type=\"password\"\n//                   id=\"password\"\n//                   autoComplete=\"current-password\"\n//                   value={password}\n//                   onChange={this.changeHandler}\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               color=\"primary\"\n//               //   disabled={!validateForm()}\n//               style={submit}\n//             >\n//               Sign Up\n//             </Button>\n//             <Grid container justify=\"flex-end\">\n//               <Grid item>\n//                 <Link href=\"Signin\" variant=\"body2\">\n//                   Already have an account? Sign in\n//                 </Link>\n//               </Grid>\n//             </Grid>\n//           </form>\n//         </div>\n//         <Box mt={5}></Box>\n//       </Container>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}