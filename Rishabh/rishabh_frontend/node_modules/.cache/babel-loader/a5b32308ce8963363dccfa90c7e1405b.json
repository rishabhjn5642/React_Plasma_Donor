{"ast":null,"code":"var _jsxFileName = \"/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/shared/cardDetails/containor/CardPage.js\";\nimport React from \"react\";\nimport DistancSlider from \"../../filters/DistanceSlider\";\nimport PriceSlider from \"../../filters/PriceSlider\";\nimport faker from \"faker\";\nimport Card from \"../component/Cards\";\nimport BloodGroup from \"../../filters/BloodGroupDropDown\"; // import CitiesDropDown from \"../../filters/CitiesDropdown\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nclass CardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.responsevalue = response => {\n      let a = response.map(data => {\n        return {\n          src: faker.image.avatar(),\n          price: data.bidPrice\n        };\n      });\n      this.setState({\n        data: a\n      });\n    };\n\n    this.location = () => {\n      console.log(\"e\");\n    };\n\n    this.checkvalue1 = v => {\n      this.setState({\n        distance: v\n      });\n    };\n\n    this.checkvalue2 = v => {\n      this.setState({\n        price: v\n      });\n      console.log(v);\n    };\n\n    this.state = {\n      actual: null,\n      price: null,\n      data: [],\n      latitude: null,\n      longitude: null,\n      distance: 2000,\n      i: 0\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        i: 1\n      });\n    });\n    const url1 = \"http://localhost:8080/filters/distance\";\n    var q = {\n      distance: 2000,\n      latitude: 29.7140224,\n      longitude: 75.9103488\n    };\n    console.log(q);\n    const response = fetch(url1, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(q)\n    }).then(response => response.json()).then(response => console.log(response)).catch(() => console.log(\" rishabh \" + url1 + \" response. Blocked by browser\"));\n    const url = \"http://localhost:8080/covid/getAllCovidUsers\";\n    fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(response => this.responsevalue(response)).catch(() => console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, this.state.i === 1 ? this.location() : null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"50px\",\n        borderRadius: \"25px\",\n        backgroundColor: \"#F1F1F1\",\n        marginLeft: \"10px\",\n        marginRight: \"10px\",\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DistancSlider, {\n      checkvalue: this.checkvalue1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PriceSlider, {\n      checkvalue: this.checkvalue2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BloodGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    })))), this.state.data.map((obj, key) => {\n      return this.state.actual == null && this.state.price == null ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        Price: this.state.data[key].price,\n        ratings: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }) : this.state.actual >= obj.distance && this.state.price == null ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        distance: obj.distance,\n        ratings: obj.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }) : this.state.actual >= obj.distance && obj.price <= this.state.price ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        distance: obj.distance,\n        ratings: obj.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }) : this.state.price >= obj.price && this.state.actual == null ? /*#__PURE__*/React.createElement(Card, {\n        imgsrc: this.state.data[key].src,\n        distance: obj.distance,\n        ratings: obj.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }) : null;\n    }));\n  }\n\n}\n\nexport default CardPage;","map":{"version":3,"sources":["/Users/teaxpresspvtltd/Downloads/Rishabh/rishabh_frontend/src/shared/cardDetails/containor/CardPage.js"],"names":["React","DistancSlider","PriceSlider","faker","Card","BloodGroup","Grid","CardPage","Component","constructor","props","responsevalue","response","a","map","data","src","image","avatar","price","bidPrice","setState","location","console","log","checkvalue1","v","distance","checkvalue2","state","actual","latitude","longitude","i","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","coords","url1","q","fetch","method","headers","body","JSON","stringify","then","json","catch","url","mode","cache","credentials","render","padding","borderRadius","backgroundColor","marginLeft","marginRight","marginTop","obj","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DistancSlider from \"../../filters/DistanceSlider\";\nimport PriceSlider from \"../../filters/PriceSlider\";\nimport faker from \"faker\";\nimport Card from \"../component/Cards\";\nimport BloodGroup from \"../../filters/BloodGroupDropDown\";\n// import CitiesDropDown from \"../../filters/CitiesDropdown\";\nimport Grid from \"@material-ui/core/Grid\";\n\nclass CardPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        actual: null,\n        price: null,\n        data:[],\n        latitude:null,\n        longitude:null,\n        distance:2000,\n        i:0\n\n      }\n    };\n\n   componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          i:1\n        });\n      }\n    )\n    const url1 = \"http://localhost:8080/filters/distance\";\n    var q = {\n      distance: 2000,\n    latitude: 29.7140224,\n    longitude: 75.9103488\n  \n    }\n    \n    console.log(q);\n  \n    const response =fetch(url1, {\n    method: \"POST\",\n    \n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    \n    body: JSON.stringify(q)\n  })\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch(() =>\n      console.log(\" rishabh \" + url1 + \" response. Blocked by browser\")\n    );\n\n    const url = \"http://localhost:8080/covid/getAllCovidUsers\";\n    fetch(url, {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n    })\n      .then((response) => response.json())\n      .then((response) => this.responsevalue(response))\n      .catch(() =>\n        console.log(\"Canâ€™t access \" + url + \" response. Blocked by browser\")\n      );  \n  };\n\n\n\n  responsevalue=(response)=>{\n\n    let a=response.map((data) => {\n    return { src:faker.image.avatar(),price:data.bidPrice}})\n    this.setState({\n      data:a\n    }\n  )\n}\n\n\nlocation=()=>{\nconsole.log(\"e\")\n \n}\n\n  checkvalue1 = (v) => {\n    this.setState({\n      distance:v,\n    });\n  };\n  checkvalue2 = (v) => {\n    this.setState({\n      price: v,\n    });\n    console.log(v);\n  };\n\n\n  render() \n  {\n    return (\n      <div>\n        {this.state.i===1?this.location():null}\n        <div\n          style={{\n            padding: \"50px\",\n            borderRadius: \"25px\",\n            backgroundColor: \"#F1F1F1\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\",\n            marginTop: \"20px\",\n          }}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={5}>\n              <DistancSlider checkvalue={this.checkvalue1} />\n            </Grid>\n            <Grid item xs={5}>\n              <PriceSlider checkvalue={this.checkvalue2} />\n            </Grid>\n           \n            <Grid item xs={4}>\n              <BloodGroup />\n            </Grid>\n          </Grid>\n        </div>\n        {this.state.data.map((obj, key) => {\n          return this.state.actual == null && this.state.price == null ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              Price={this.state.data[key].price}\n              ratings=\"4\"\n            />\n          ) : this.state.actual >= obj.distance && this.state.price == null ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              distance={obj.distance}\n              ratings={obj.price}\n            />\n          ) : this.state.actual >= obj.distance && obj.price <= this.state.price ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              distance={obj.distance}\n              ratings={obj.price}\n            />\n          ) : this.state.price >= obj.price && this.state.actual == null ? (\n            <Card\n              imgsrc={this.state.data[key].src}\n              distance={obj.distance}\n              ratings={obj.price}\n            />  \n          ):null\n        }\n          \n        \n        )\n        }\n      </div>\n    );\n  }\n\n}\n\nexport default CardPage;\n"]},"metadata":{},"sourceType":"module"}